Number Of Paths In A Matrix

Determine the number of distinct paths to reach from (0, 0) to (n - 1, m - 1) going through only open cells (cells containing 1) and moving only right or down.
For the above example, there are two possible paths from the cell (0, 0) to cell (1, 3) in this matrix. Complete the function numberOfPaths. The function must return the number of paths through the matrix, modulo (10^9 + 7). 

Example One

Input:

3

4

1 1 1 1

1 1 1 1

1 1 1 1



Output: 10


#
#Complete the fumction numberOfPaths
#The fumction takes integers 2D integer array, matrix, as parameter.
#
def numberOfPaths(matrix):
    # Write your code here
    rows, cols = len(matrix), len(matrix[0])

    for row in range(1, rows):
        if matrix[row-1][0] == 0:
            matrix[row][0] = 0
    for col in range(1, cols):
        if matrix[0][col-1] == 0:
            matrix[0][col] = 0

    for row in range(1, rows):
        for col in range(1, cols):
            if matrix[row][col] == 1:
                matrix[row][col] = matrix[row-1][col] + matrix[row][col-1]

    return matrix[-1][-1] % 1000000007


