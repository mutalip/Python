#You are given an integer array arr of size n. Group and rearrange them (in-place) into evens and odds in such a way that group of all even integers appears on the left side and group of all odd integers appears on the right side. 
Example

#Input: [1, 2, 3, 4]

#Output: [4, 2, 1, 3]

#Order does not matter. Other valid solutions are: 

#[2, 4, 1, 3]

#[2, 4, 3, 1]

#[4, 2, 3, 1]
# Complete the function below.

def solve(arr):
    if not arr or len(arr)==1:
        return arr
    _group_nums(arr,0,len(arr)-1)
        
    return arr
    
def swap(arr,i,j):
    arr[i],arr[j]=arr[j],arr[i]
        
def _group_nums(arr,left,right):
    while left<right:
        while left<len(arr) and arr[left]%2 == 0:
           left+=1
        while right>+0 and arr[right]%2==1:
            right-=1
        
        if left<right:
            swap(arr,left,right)
        

