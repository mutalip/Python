
#Print All Paths Of A Tree

#Given a binary tree, return all paths from root to leaf.


# class TreeNode():
#    def __init__(self, val=None, left_ptr=None, right_ptr=None):
#        self.val = val
#        self.left_ptr = left_ptr
#        self.right_ptr = right_ptr

# complete the function below
# Input: root of the input tree
# Output: A list of integer lists denoting the node values of the paths of the tree

def allPathsOfABinaryTree(root):
    #Edge case
    if root==None:
        return []
    
    global_result = []

    def DFS(node, val_list):
        
        val_list.append(node.val)
        
        #Base
        if (node.left_ptr == None) and (node.right_ptr == None):
            global_result.append(val_list[:])   
    
        #Recursion
        if (node.left_ptr != None):
            DFS(node.left_ptr, val_list)
            
        if (node.right_ptr != None):
            DFS(node.right_ptr, val_list)
            
    
        val_list.pop()
        
    DFS(root, [])
    return global_result
